# Description II
You are given an integer array gifts denoting the number of gifts in various piles. Every second, you do the following:

* Choose the pile with the maximum number of gifts.  
* If there is more than one pile with the maximum number of gifts, choose any.
* Leave behind the floor of the square root of the number of gifts in the pile. Take the rest of the gifts.
Return the number of gifts remaining after k seconds.

## Test Case
Case1:

    Input: gifts = [25,64,9,4,100], k = 4

    Output: 29
    Explanation：The gifts are taken in the following way:
    - In the first second, the last pile is chosen and 10 gifts are left behind.
    - Then the second pile is chosen and 8 gifts are left behind.
    - After that the first pile is chosen and 5 gifts are left behind.
    - Finally, the last pile is chosen again and 3 gifts are left behind.
    The final remaining gifts are [5,8,9,4,3], so the total number of gifts remaining is 29.
---
Case2:

    Input: gifts = [1,1,1,1], k = 4

    Output: 4
    Explanation：In this case, regardless which pile you choose, you have to leave behind 1 gift in each pile. 
    That is, you can't take any pile with you. 
    So, the total gifts remaining are 4.
---

## tips
* 1 <= gifts.length <= 1000
* 1 <= gifts[i] <= 10^9
* 1 <= k <= 1000

## Solution
### 最大堆
用最大堆来维护各堆礼物的数量，进行k次操作：每次从中取出最大的一个，求根之后再将结果放回堆中。

最后，堆中所有礼物之和就是我们要的答案。


